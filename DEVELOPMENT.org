* Items for Development
- Create a kinetic-init.js file to serve as a custom init.js for the
  kinetic backend. Leave blank for now - if we need to initialize any
  values or copy code from the original init.js, we can add to it
  later. Maybe leave a console log so we can see when it is being run.

- Add "kinetic_backend" to scripts in package.json
  * First try
    "kinetic_backend": "S3BACKEND=testvalue node testscript.js"
    where testscript is a script that does a console.log and prints
    process.env.S3BACKEND

  * If above works, use
    "kinetic_backend": "S3BACKEND=kinetic node kinetic-init.js && index.js

- Add code to handle auth for kinetic option in lib/Config.js(?)

- Add 'kinetic' to const validBackends in lib/Config.js

- See if var clusters should be set to a custom value for
  kinetic backend in lib/server.js (or if default defined in
  lib/Config.js is fine).

- Add an if conditional (configs.backends.data === 'kinetic') for
  setting of client in lib/data/wrapper.js.
  
  * Set client first to file and see if it behaves as expected.
  * If it works, go ahead and create kinetic/backend.js, import, and
    start developing on client for kinetic backend.

- Add an if conditional (configs.backends.data == 'kinetic') for
  setting of client in lib/metadata/wrapper.js.
