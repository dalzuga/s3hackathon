* Introduction - S3 Server
  S3 is a protocol used by Amazon (AWS) and other cloud storage providers.

  Scality's S3 is an open-source implementation available on Github (https://github.com/scality/s3).

  Here is a link to the S3 hackathon [[https://s3.scality.com/page/sf-hackathon][web flier]].
* First day of the hackathon
  1) Clone Antonin's branch
  2) Fix a mistake that hasn't been pushed yet
  3) Getting =nvm= for choosing a version of node
  4) Running and configuring S3 Server and s3blaster
  
  Disclaimer: these directions are for Ubuntu (I’m on 16.04.)

  Cloning the branch:

  #+BEGIN_EXAMPLE
  git clone -b dev/ft/KineticBackendClass git@github.com:scality/S3.git
  #+END_EXAMPLE
  
  Fixing a mistake:
  In package.json, find line 31 that says

  #+BEGIN_EXAMPLE
  "kinetic": "scality/kineticlib#dev/ft/removeIO",
  #+END_EXAMPLE

  and change it to

  #+BEGIN_EXAMPLE
  "kinetic": "scality/kineticlib”,
  #+END_EXAMPLE
  
  Installing =nvm=:

  Antonin recommended to install =nvm=, which is a node version
  package manager that allows you to select the node version to
  use. He told me to use version 4.6 or higher. The latest one, and
  the one we ended up using, was v4.6.1.
  
  #+BEGIN_EXAMPLE
  daniel@ubuntu:~/workspace/S3$ node -v
  v4.6.1
  daniel@ubuntu:~/workspace/S3$
  #+END_EXAMPLE
  
  You can install =nvm= here: https://github.com/creationix/nvm

  I recommend using the following line, which is included in the README, and which worked for me:

  #+BEGIN_EXAMPLE
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
  #+END_EXAMPLE
  
  after that, there will be something added to your =~/.bashrc= so
  that =nvm= is loaded every time you start a terminal. Make sure you
  either =source= it or restart your terminal. To install and use, we
  ran the commands:

  #+BEGIN_EXAMPLE
  nvm install 4
  nvm use 4
  #+END_EXAMPLE

  to use the latest node (of version 4), as directed by Antonin.

  Running and configuring S3Server and s3blaster:

  Then we set env vars =S3SPROXYD= and =S3CONFIG= by doing:

  #+BEGIN_EXAMPLE
  S3SPROXYD=kinetic
  S3CONFIG=/home/daniel/workspace/S3/config.json
  #+END_EXAMPLE

  (You will have to modify =S3CONFIG= to your path for =config.json=)

  We ran the Java Kinetic drive simulator by doing:

  #+BEGIN_EXAMPLE
  npm run mem_backend
  #+END_EXAMPLE

  from the =S3/= directory.

  Then we ran s3blaster (https://github.com/scality/s3blaster) using
  the command:

  #+BEGIN_EXAMPLE
  node index.js --requests put,get,delete --sizes 2 --unit MB --runTime 1
  #+END_EXAMPLE

  from the =s3blaster/= directory.

  The last thing we did was look at S3/lib/data/kinetic/Kinetic.js to see how it worked.

